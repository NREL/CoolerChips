name: CI

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
  schedule:
    - cron: "0 0 * * 0"

jobs:
  test:
    name: Test on Ubuntu with Python 3.10
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Additional info about the build
        shell: bash
        run: |
          uname -a
          df -h
          ulimit -a

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: mostcool:latest
          build-args: |
            RUN_TESTS=true

      - name: Remove existing Docker container
        run: |
          docker rm -f mostcool-container || true

      - name: Verify pytest installation
        run: |
          docker run --name mostcool-container-verify mostcool:latest pytest --version
        continue-on-error: true

      - name: List contents of /app/mostcool/tests/ inside Docker container
        run: |
          docker run --name mostcool-container-list mostcool:latest ls -la /app/mostcool/
      
      - name: Stop and remove Docker container after listing contents
        run: |
          docker stop mostcool-container-list
          docker rm mostcool-container-list

      - name: Run tests inside Docker container
        run: |
          docker rm mostcool-container-test
          docker run --name mostcool-container-test mostcool:latest pytest --cov=mostcool --cov-report=xml /app/mostcool/tests/
        continue-on-error: true

      - name: Copy coverage report from Docker container
        run: |
          docker cp mostcool-container-test:/app/mostcool/coverage.xml .

      - name: Stop and remove Docker container after running tests
        run: |
          docker stop mostcool-container-test
          docker rm mostcool-container-test

      - name: Upload coverage to CodeCov
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-ubuntu-py3.10
